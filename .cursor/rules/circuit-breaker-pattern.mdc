---
description: Implement a circuit breaker pattern to prevent cascading failures in AI model chains.
globs: */
---
{
  "rule_name": "Circuit Breaker Pattern",
  "implementation_guidelines": [
    "Wrap calls to external services or AI models with a circuit breaker. If the service fails repeatedly, the circuit breaker will open, preventing further calls until the service recovers. This prevents cascading failures and improves the overall stability of the system.",
    "python",
    "from functools import wraps",
    "class CircuitBreaker:",
    "def __init__(self, max_failures=3):",
    "self.failures = 0",
    "self.max_failures = max_failures",
    "def __call__(self, func):",
    "@wraps(func)",
    "def wrapper(*args, **kwargs):",
    "if self.failures >= self.max_failures:",
    "raise Exception(\"Service unavailable\")",
    "try:",
    "result = func(*args, **kwargs)",
    "self.failures = 0",
    "return result",
    "except Exception as e:",
    "self.failures += 1",
    "raise",
    "return wrapper"
  ],
  "code_examples": [],
  "best_practices": [],
  "dependencies": []
}