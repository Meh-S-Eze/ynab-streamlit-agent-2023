---
description: Design Gemini prompts with strict output formatting requirements to ensure parseable responses, required transaction fields, and correct data types. Current prompts lack structure, causing parsing failures.
globs: **/*GeminiSpendingAnalyzer.py
rule_name: Structured Gemini Prompts
---
{
  "implementation_guidelines": [
    "Create a JSON schema or data structure for the expected Gemini output.",
    "Embed the schema in the prompt template to guide Gemini's response.",
    "Specify the required data types for each field (e.g., float, string, YYYY-MM-DD).",
    "Include instructions for handling ambiguous or unknown information.",
    "Request the output in JSON format."
  ],
  "code_example": "PROMPT_TEMPLATE = \"\"\"Return JSON with:\n{\n  \"intent\": \"transaction_create|balance_inquiry|category_update\",\n  \"amount\": float,\n  \"date\": \"YYYY-MM-DD\",\n  \"payee\": string,\n  \"category\": string\n} \nQuery: {user_input}\"\"\"",
  "best_practices": [
    "Iteratively refine the prompt based on Gemini's responses.",
    "Use few-shot learning to provide examples of the desired output format.",
    "Implement error handling to gracefully handle unexpected Gemini responses.",
    "Monitor Gemini's performance and adjust the prompt as needed."
  ],
  "dependencies": []
}